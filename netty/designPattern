类之间的关系：
   1.依赖  ------->   people  read(Book book)    people ----->Book
   2.关联  ———————>   people  Book book  read(){book.getName() }
   3.聚合  ◇—————>   people  Book book   Cloth cloth   people wear cloth and  read book
   4.组合 ◆——————>   people  Soul soul Body body   People(Soul soul , Body body){this.soul = soul ; this.body = body}
   5.实现 -------▲
   5.继承 ———————▲


设计模式
   1. 开闭原则
      软件应该尽量在不修改源代码的情况下进行扩展，  对扩展开放、对修改关闭
   2. 里氏代换原则
      所有引用基类的地方，都必须能透明的使用其子类的对象
   3. 依赖倒换原则
      抽象不应该依赖细节，细节应该依赖抽象
   4. 单一职责原则
      一个类只负责一个功能
   5. 接口隔离原则
      使用多个隔离的接口，而不是使用一个单一的总接口
   6. 迪米特法则
      一个软件实体应当尽可能少的与其他实体发生作用


23种设计模式：
   1.创建型模式：工厂方法、抽象工厂方法、单例模式、建造者模式、原型模式
   2.结构型模式：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式
   3.行为型模式：策略模式、模板方法模式、观察者模式、迭代模式、责任链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式
