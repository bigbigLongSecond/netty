netty学习分为以下几个部分
1.nio的学习
2.netty的学习

简单demo的构建
1.首先我们要做的是对netty做一个简单的demo，这个demo的功能是创建一个服务端，当客户接收到信息时，返回“helloWorld”
2.用netty简单的形成一个客户端和服务端
3.带聊天功能的客户端和服务端
4.带有心跳机制的服务端
5.基于webSocket的长连接的全双工的交互

通过这五个例子，由写一个服务端开始，到写一个客户端，再到服务端和客户端的交互，再带有心跳检测和基于webSocket全双工的服务端，逐步
加深对netty的了解。

对netty有了一个大概的了解后，就要开始对底层的nio进行了解和学习
这个部分我们分别学习了buffer、channel和selector, 并写了一个基于nio的服务端和客户端
具体学习细则如下：
1.buffer
1.1 buffer 可以存不同的类型，取得时候可以按照响应的数据取出，一个buffer可以实现存和取的功能。通过flip转化
1.2 buffer 切出一部分（position，limit）。 buffer部分和slice都具有单独的参数，修改slice的值也会相应的修改buffer
1.3 只读buffer，asReadOnlyBuffer(),这个buffer 只能读取不能做修改
1.4 MappedByteBuffer 零拷贝buffer，直接从内存中读取和修改数据
2.channel
2.1 可以从一个Stream中获得一个Channel对象，这个channel对象调用read/write 方法向buffer中读取/写入数据
2.2 DirectBuffer零拷贝用法的解析，可以通过Buffer.allocateDirection(),获得一个DirectByteBuffer。
2.3 Scatting 和 Gathering  。 channel可以读取或写入一组buffer。这样有利于对自定义协议的支持
3. Selector
3.1 Selector的基本用法（可以通过一个Selector管理多个端口程序）
4.NIO
4.1 NIO部分的一个总结，由NIO来完成客户端和服务端。





